问题,回答,所属分类
后端通用学习路线,"说实话，对于学习路线这种文章我一般是不写的，大家看我的文章也知道，我是很少写建议别人怎么样怎么样的文章，更多的是，写自己的真实经历，然后供大家去参考，这样子，我内心也比较踏实，也不怕误导他人。
但是，最近好多人问我学习路线，而且很多大一大二的，说自己很迷茫，看到我那篇 普普通通，我的三年大学 之后很受激励，觉得自己也能行，（是的，别太浪，你一定能行）希望我能给他个学习路线，说实话，几乎每天都有问这种问题的，鉴于此，我就来写一篇适合普通大众的学习路线，就从大一入学那一刻开始入门说起，虽然不一定适合你，但或许能给没有明确目标的人带来一些学习的方向，那么这篇文章，我就觉得值了。
普普通通，我的三年大学
注意：这篇文章不是让你成为大神的，学完也不是多厉害，而是，给处于大学迷茫、不知道学啥的你，一个学习的方向，无论你是否是科班。不过我相信，当你学完了这些，你应该会有自己的学习方向了。
下面推荐的所有书籍，都可以在这个 GitHub 上下载到，里面收集了挺多优质编程书籍：计算机书籍免费下载（高清带目录完整PDF版）
计算机书籍免费下载（高清带目录完整PDF版）
1、入门语言的选择
学习编程的第一件事，我觉得就是选择一门语言，不过能选择的语言实在是太多了，不知道如何选择的，可以选如下一门比较热门，也是 90% 人的选择的语言入门。分别是 C 语言，Python，Java。
那应该选哪一门呢？说实话，我觉得选哪一门都问题不大，因为等你成功入门之后，你大概率还会学习其他语言，那么我这里建议跟着学校的课程来选，因为大一基本也都会开设一门编程语言，我们学习当时开设的是 C 语言。
那么问题来了，根据读者的反馈，其实还要部分学校大一是没有开设这些语言的，而且学那些网页设计这类的语言，那该咋办？答是我这里建议你仍然选择一门语言来学习，由于你不是跟着学校的课程走的，那么我这里建议你选择 C 语言。
说实话，我觉得不论你是学哪一门语言的，如果有时间，都应该了解、学习下 C 语言，我觉得，你只要会了 C 语言，那么你入门其他语言分分钟，但会了其他语言，入门 C 语言可能会被虐。学习 C 语言，真的让人学习到挺多知识的，所以你不知道学习哪一门语言，这里我建议学习 C 吧，以后参加打ACM之类的比赛了，也一般用 C/C++。
2、书籍以及视频的介绍
这一个星期，我至少被 15 个人问过学习 C 语言要用哪一本呀？用什么编译器啊？反正我是被问哭了，不过当年我也有这样的疑问，所以就都耐心回答了。所以这里介绍下一些书籍和视频，虽然不是最好的，但我觉得还可以。这里我就以 C/Python/Java 为例子来介绍。
后面我也会出一篇汇总各类工具的文章。现在已经收集了几十个常用开发工具了，不过可没有提供破解教材哈，百度一搜一大堆破解教程或者序列码。估计在过一个星期，我就会整理出来的了
（1）、C语言
书籍推荐：书籍可以看《C语言程序设计》，谭浩强写的，适合入门学习（当然，很多人喷这本书，你们也可以看别的话，我作为初学者看时，感觉还不错），也是我第一本看的书。进阶可以看《C 和指针》。
视频推荐：可以看浙大翁老师录制的视频，在 b 站搜索 C 语言就出来了。说实话，对于新手，我觉得看视频还是比较不错的，可以少掉很多坑，不然你搞编译环境都搞死。
这里工具我就不介绍了，一般书籍和视频都会手把手交你们用哪个编译器。我当时用的是 codeblocks 和 devc++，不推荐 vs6.0，过时的编译器了，然而很多高校还在用，，，
（2）Java
书籍推荐：《Java核心卷1》，这个算是入门书籍吧，入门书籍我看的不多，暂时介绍这一本，因为没看过的一般我不介绍，大家可以去网上搜索。
视频推荐：这里推荐 【尚学堂】Java300集，作者是 高琪 录制的，b 站搜索就可以了。讲的是真的好，入门的话，感觉看前面 100 集就可以了。进阶可以看《Java编程思想》，这本书也很好，解决了我很多疑惑。
Java 编译器推荐用 IntelliJ IDEA，自己百度去搜索。
（3）Python
书籍推荐：这里推荐《Python编程：从入门到实践》。
视频推荐：我看过小甲鱼是视频，还不错，如果大家要看小甲鱼的视频的话，书籍可以顺便来他的配套书籍吧。视频叫《[小甲鱼]零基础入门学习Python》，b 站搜索就可以了。书籍也是也是《[小甲鱼]零基础入门学习Python》。
开发工具我当时是用 pycharm
问题来了，很多人问，应该掌握到哪个程度才算可以呢？
说实话，我也不大清楚，，我觉得书中说的，90% 理解就可以了，注意，是理解，具体怎么写，忘记了问题不大。总之，当然是学的深点比较好了。
大学第一学期你入门了某种语言之后，就要开始学习数据结构与算法L。当然，不一定是第一学期，对于非科班的也一样，也是建议这个学习顺序。当然，你有自己的目标，完全可以按照自己的来。
我的文章是主写数据结构与算法的，我秋招也是靠着这个优势拿到 offer 的，所以我认为数据结构与算法是非常非常重要的，可能你会听到工作都基本没用到这些知识啊，或者库函数都帮我们封装好了啊，我们干嘛要学。
如果你这样想的，那你就错了。对于想要找工作的来说，这方面的知识是必考的，所以你得学；对于已经工作的来说，这方面的知识，可以让你学习到很多设计思想，所谓 数据结构 + 算法 = 程序，而且你学了这个，你会发现学习其他知识，上手的特别快。综上，数据结构与算法必学。
好吧，上面扯了这么多，就是告诉你，数据结构与算法的重要性，好了，下面我介绍下入门数据结构必学的有哪些，不过你跟着书本的学习顺序来就是了。
1、基础数据结构的学习
1、时间复杂度、空间复杂度
2、链表、队列、栈
3、树（二叉树，查找二叉树、AVL树，红黑树等）
4、图（图有好多种算法，深度/广度搜索，最短路径、最小生存树等）
如果你是科班的，那么这些我觉得你大一第二学期都学完是最好的了，没学完也问题不大，有些人可能是先教《离散数学》这本课，为数据结构与算法做铺垫。
书籍推荐：《大话数据结构》、《数据结构与算法分析:C语言描述版》，学哪一本？都可以，问题不大，我当时学的是第二本。大家记得根据自己的语言去学，我上面列举的，都是用 c 语言来实现的。
视频：我只看过《小甲鱼的数据结构与算法》视频，你们自己看着办吧。
2、算法的学习
在大一大二，真心建议你们把算法基本功打好，后面就真的没啥时间刷题之类的了，因为无论你以后要学习哪个方向的，算法都是实用的，会一些算法，说话也都自信了。算法的学习，刷题是必须的了，但不建议盲目刷题，而是先学习一些算法思想，在找对应的题刷，要学的主要有：
1、十大排序算法
2、递归、贪心、回溯、动态规划、枚举等
推荐书籍：《阿哈算法》、《算法设计与分析基础》适合入门；《算法第四版》、《算法导论》、《编程之美》适合进阶
视频：这种还是挺建议看书，我没看过视频，，这里就不介绍了。
具体可以看我之前的文章：我是如何学习算法的？
我是如何学习算法的？
3、保持算法的学习
算法的学习，真的是靠积累的，而刷题是必须的。而且学校都会举办一些比赛，这里还是比较建议大家去参见的，这样也能让你更加有激情着去学习。当然，每年都会有很多 ACM 编程大赛，要不要参加呢？这个看你了，也不是说参加就一定好，看你自己吧，具体可以参考我之前一篇文章说的： 普普通通，我的三年大学
普普通通，我的三年大学
大家可以在 leetcode 长期保持刷题，一天一两道，或者一个星期三四道都行。
刚才我选了选择一门语言来入门，之后你可能还会学习其他语言。我当时 C 语言入门，后面深入学习 Java。
你可以学习过很多种语言，但你一定要有一门拿的出手的语言，所以把上面的学习了之后，这个时候你可能是大二，最多大三，那你就应该选择一门语言来深入学习了，一般可选的有四门：C++，Java，Python，Go，如果你想从事后端开发岗位 ，那么 C++，Java和Go相信是大多数人的选择，其中我觉得选择 Java 的人数是最多的。Go 是最近才火起的语言，也是个不错的选择。
那么问题来了，该选哪一门呢？入门你以后想从事游戏之类的开发，那么建议选择 C++，或者你以后比较想去腾讯，字节跳动这些的，可能选择 C++ 会好一点。如果你想从事Web网站开发的，或者未来想去阿里巴巴、美团这些的，那么 Java 会好点，Go 和 Python呢？其实我也不是很懂，哈哈哈哈。不过我听说，对于一些不是很大型的网站之类的，都会用 Python 或者 Go 之类的快速开发。
大家如果是面向公司编程的，可以去看看哪些公司的技术栈，来选。当然，无论你选哪一门，只要你有实力，哪个公司都会收你，只是有可能到时候要转语言，我现在好像是需要从 Java 转向 Go，不过语言只是一门工具，把基础共通的知识学好，转语言都问题不大。
由于我是深入学习 Java 的，那我就介绍下 Java 的学习以及书籍的推荐吧，其他语言我觉得也类似。我大二开始学习 Java 的，还是看了挺多知识。入门的就不介绍了，上面介绍过。下面说的基本是深入学习必须理解的了。
1、Java进阶必学
集合模块：主要是包括各种常用集合：例如 Set（包括HashSet，TreeSet）, Map（包括 HashMap，HashTable），List(包括ArrayList，LinkedList)等等，上面列举的都得学习它的源码
多线程：synchronize，volatile，线程池，并发包（如lock等等），太多了，学了你们自然知道，我也不说的太详细了。推荐看《Java 并发编程艺术》+《Java编发编程实战》。
各种文件流：file，inputStream，outputStream等等，反正就是各种文件流，看书时你们自然会看到，不详细介绍。
虚拟机：虚拟机是必须学习的了，重点是GC部分，推荐看《深入理解Java虚拟机：JVM 高级特性与最佳实践》，一本就差不多够了，多看四五遍就行了。
其他：还有很多，如反射，注解，异常等。
2、JavaWeb 入门
学了上面那么多，啥程序、网站也没写出来，有点难受？没事，这个时候，我们就要开始撸网站了，如果是以 Java 作为开发语言的，那么 JavaWeb 是必须学的了。这个时候你可以入门学习下这些（注意，不用深入，快速找个视频入门就可以了）
1、mysql、html+css+js 、 tomcat、xml等。推荐看视频，自己去搜索 JavaWeb的视频，那么哪里不会补哪里，这些知识，几个小时就可以入门一门的了。
2、servlet+jsp 系列。
不建议直接学习框架，也是应该先学习 servlet，这些底层才是最重要滴。
相关视频：自己B站搜索一个吧，尽量找时长短一点的。
3、三大框架
Servlet 写太麻烦了，只有认真学过 servlet 的人才能吹框架的好处，所以先学 servlet 在来学习框架，主要有三大框架：Spring + SpringMVC + Mybatis。
其实 SpringMVC 也是属于 Spring 吧，MVC 只是一种思想，这里学习顺序是先建议学习 Spring，直接看视频入门学习就可以了，后面在买书。视频还是那句话，B 站搜索。黑马的讲的不错，我当时也是看黑马的。
3、中间件的学习
必须中间件：redis，其他我也没学过，这学过这一门，Redis 感觉人人都得学啊，推荐书籍《Redis 设计与实现》、《Redis开发与运维》。我先看后者，感觉后者适合入门，然后在看前者的。
由于我这篇文章是给一个大致的学习方向的，我就不说的太详细了，不然得单独来一篇《Java学习路线》了。
对于 Java 的学习，我觉得你会了上面这些，我觉得可以去尝试找实习了，应该也能找的到，大二大三去体验一波学习还是挺好的。
看过我文章的都知道，我一直强大计算机基础的重要性，所以这里必须列举要学的有哪些。刚才说了选择一门语言深入，你在深入学习的过程中，肯定也在学习学校开设的专业课，包括：计算机网络 + 操作系统 + 数据库 + 汇编 + 计算机组成原理 + 编译原理 等等。
而这些，我认为是非常重要的，对于秋招的同学来说，只要你会这些，就算你是深入学习 Java的，然后你去应聘 C++ 岗，我觉得也问题不大，你和面试官说我不会 C++ 就可以了，大不了到时候转岗。我虽然是 Java 技术栈的，但是我面的公司，都不是 Java 技术栈的，例如 小米，Shopee，字节跳动，腾讯等。但是，这些都问题不大，你只要会这些基础 + 算法，而且，在秋招，特别是对于一些大公司，关于语言的，其实问的也不是很多，基础问的特别多，所以你会基础，面试会占很多优势。下面按照学习的优先级，给这些课程排个序。
其实给他们排优先级是不大好的，这样给他们排，感觉容易被大佬喷，不过没办法，对于小白来说，我还是想排以下顺序
1、计算机网络 + 操作系统
2、数据库 + 计算机组成原理（数据库相应你们可能已经先学过 MySQL 了）
3、汇编 + 编译原理
不过，如果你们还是在校的大一大二，那么可以根据你们课程的学习顺序来，但是，我建议有时间的可以提前学，不一定要等到学校教了才学，反正大部分老师讲的很一般，但时候你学过的话，可以当做复习，或者学其他。
书籍推荐
《计算机网络自顶向下》、《图解 http》、《深入理解计算机操作系统》、《汇编语言》（王爽写的）。具体要掌握到哪个程度可以看我之前的文章了。
【吐血整理】那些让你起飞的计算机基础知识：学什么，怎么学？
【吐血整理】那些让你起飞的计算机基础知识：学什么，怎么学？
之前写过很多文章，所以这里不写的太具体了，具体的可以看我之前写过的文章。
我觉得对于大学四年来学，上面这些是最核心的，也是必须学的。但是仅仅是上面这些还是不够的，上面的这些一两年就可以学完的。所以你还有很多其他时间，那么你可以学一些自己感兴趣的，多折腾，多豆鼓，而我上面学的，希望你都学。你也可以看我大学学过的一些核心基础知识：
我的经历/成长/经验
我的经历/成长/经验
前两年都在折腾，特别是第一年，但是，我始终一直学习那些比较核心的课程。再次强调，这篇文章不是让你成为大神的，学完也不是多厉害，而是，给处于大学迷茫、不知道学啥的你，一个方向，无论你是否是科班,如标题所说，普普/大众。不过我相信，当你学完了这些，你应该会有自己的学习方向了。
最后，是希望各位还在校的学生，大一可以好好浪，但也要保持应有的学习时间，之后，就好好学习吧。不管你是名校还是非名校，我觉得你在只要这几年认真学，进大公司的几率，真的非常大，这绝对不是鸡汤。
上面推荐的所有书籍，都可以在这个 GitHub 上下载到，里面收集了挺多优质编程书籍：计算机书籍免费下载（高清带目录完整PDF版）
。
计算机书籍免费下载（高清带目录完整PDF版）
学习路线",
Java 后端开发学习路线,"大家好，我是帅地。
接下来的一段时间，帅地会总结各种技术栈的学习路线，例如 Java 开发，C++ 开发，python 开发，前端开发等等，假如你没有明确的目标，或许可以按照我说的学习路线来学习一波，我写的每一份学习路线，不会很全面，因为我认为，东西列的太多，反而不利于新手的学习，所以我列举的，都是比较必要的知识，当你把这些知识学了的时候，我相信你不需要别人的学习路线，也能知道自己接下来需要学啥了。
下面我也总结了一套 Java 后端的学习路线，跟着这套学习路线，校招水个中大厂的 offer，概率还是挺大，到时候记得帮我多多分享就可以了。
下面推荐的所有书籍，都可以在这个 GitHub 上下载到，里面收集了挺多优质编程书籍：编程的优质书籍整理
编程的优质书籍整理
注意，下面所有推荐的书籍，大家都可以在这里下载到：计算机书籍免费下载（高清带目录完整PDF版）
计算机书籍免费下载（高清带目录完整PDF版）
一开始肯定要了解一波 Java 语言的特性，很多人都关心一开始看什么资料，其实我不推荐入门阶段看的太多太杂，因为你不知道哪些是有用的，哪些是过时的，或者在目前阶段用不到的。
对于初学者尤其是没有一点编程基础的人来说，要渡过这个从零到一的过程，往其实是非常艰难的，挫败感会非常强。如果有人领路，或者选择一门优质的课程，效果会好的很多。没事，这篇文章就来当作你们的领路人！！！
下面这些学习资料都是我曾经读过或者看过的，没看过的我也不会介绍。还是那句话，资料和视频都是辅助，顶多领你入门，剩下的还是靠自己。
学习书籍推荐：《Java核心卷1》，这个算是入门书籍吧，入门书籍我看的不多，暂时介绍这一本，大家可以去网上搜索，但个人感觉看完这本书差不多了。
有一些基础的可以看《Java编程思想》，这本书也很好，解决了我很多疑惑，不过有点难度，我是选择性看的。
Java 编译器推荐用 IntelliJ IDEA，安装步骤自己百度去搜索。
视频推荐：这里推荐高琪Java300集：尚学堂高琪Java300集。讲的还是挺好，入门的话，感觉看前面 100 集就可以了。
尚学堂高琪Java300集
想要靠 Java 来吃饭，单单靠看书刷视频肯定是不够的，咱们还得深入学习一波 Java 语言的特性，为了让大家少走弯路，我总结了如下核心知识：
集合模块：主要是包括各种常用集合：例如 Set（包括HashSet，TreeSet）, Map（包括 HashMap，HashTable），List(包括ArrayList，LinkedList)等等，上面列举的都得学习它的源码
多线程：synchronize，volatile，线程池，并发包（如lock等等），太多了，学了你们自然知道，我也不说的太详细了。
推荐看《Java 并发编程艺术》+《Java并发编程实战》，这两本就够了，《Java并发编程艺术》感觉得看三四遍才行，第一遍看了就忘光了，第二遍会有其他的收获，第三遍就可以吊打面试官了，书籍的下载方式我上面已经说了。
各种文件流：file，inputStream，outputStream等等，反正就是各种文件流，看书时你们自然会看到，必须多实践，不详细介绍。
虚拟机：虚拟机是必须学习的了，重点是GC部分，推荐看《深入理解Java虚拟机：JVM 高级特性与最佳实践》，一本就差不多够了，多看四五遍就行了。
其他：还有很多，如反射，注解，异常等。
学了上面那么多，啥程序、网站也没写出来，有点难受？没事，这个时候，我们就要开始撸网站了，如果是以 Java 作为开发语言的，那么 JavaWeb 是必须学的了。这个时候你可以入门学习下这些（注意，不用深入，快速找个视频入门就可以了）
视频：JavaWeb入门视频学习教程
JavaWeb入门视频学习教程
1、mysql、html+css+js 、 tomcat、xml等。推荐看视频，自己去搜索 JavaWeb的视频，那么哪里不会补哪里，这些知识，几个小时就可以入门一门的了。至于 msyql，入门推荐看《mysql不知必会》，进阶看《mysql技术内幕》，看完就差不多了。
2、servlet+jsp 系列。
不建议直接学习框架，也是应该先学习 servlet，这些底层才是最重要滴。servlet可以跟着视频学，至于 jsp 其实很少用了，不过还是可以了解一下。
#####4、框架的学习框
Servlet 写太麻烦了，只有认真学过 servlet 的人才能吹框架的好处，所以必须先学 servlet 再来学习框架，主要有三大框架：Spring + SpringMVC + Mybatis。
其实 SpringMVC 也是属于 Spring 吧，MVC 只是一种思想，这里学习顺序是先建议学习 Spring，直接看视频入门学习就可以了，后面再买书，掌握到什么程度？最后是要能知道一些原理，例如IOC，AOP的原理，使用了什么设计模式等等。
不过现在搭 ssm 太麻烦，基本都是用 SpringBoot 了，所以 SpringBoot 也必须，之后有时间的话，也要学习下 SpringCloud.
必须学的中间件：redis，Redis 基本面试必问，工作也基本的都会使用到，所以必须掌握，推荐书籍《Redis 设计与实现》、《Redis开发与运维》。两本书刷完，就差不多了，或者说第一本书刷完就差不多了。
其他的话，像消息队列啊，分布式等相关框架，有时间也可以学习一波。
把上面的 Java 基础以及框架学了，就要做个完整的项目了，我只能说，项目非常非常重要，这时候自学以及跨行业的劣势就非常大了，因为面试的过程，一定会问项目，而且必须是你自己亲自做过的项目，假如你只是看视频，没有动手实践，很容易就会被问懵。所以一定一定一定要亲自动手做一个项目。
当然不是说这个问题就成了死结了，大家可以选择实操课程去解决自己在项目经验上的缺失，特别是那种基于真实项目的课程。
一定要至少做一个项目；一定要至少做一个项目；一定要至少做一个项目；
推荐：
SpringBoot项目：电商支付实战+电商平台双系统
SpringBoot项目：电商支付实战+电商平台双系统
SpringBoot项目：企业级微信点餐系统
SpringBoot项目：企业级微信点餐系统
不过，作为应届生，单单只会 Java 是很难进大公司的，算法 + 计算机基础也是极其重要的，特别是大公司，这方面问的特别多。
大学第一学期你入门了某种语言之后，就要开始学习数据结构与算法。当然，不一定是第一学期，对于非科班的也一样，也是建议这个学习顺序。当然，你有自己的目标，完全可以按照自己的来。
我的文章是主写数据结构与算法的，我秋招也是靠着这个优势拿到 offer 的，所以我认为数据结构与算法是非常非常重要的，可能你会听到工作都基本没用到这些知识啊，或者库函数都帮我们封装好了啊，我们干嘛要学。
如果你这样想的，那你就错了。对于想要找工作的来说，这方面的知识是必考的，所以你得学；对于已经工作的来说，这方面的知识，可以让你学习到很多设计思想，所谓 数据结构 + 算法 = 程序，而且你学了这个，你会发现学习其他知识，上手的特别快。综上，数据结构与算法必学。
好吧，上面扯了这么多，就是告诉你，数据结构与算法的重要性，好了，下面我介绍下入门数据结构必学的有哪些，不过你跟着书本的学习顺序来就是了。
1、基础数据结构的学习
1、时间复杂度、空间复杂度
2、链表、队列、栈
3、树（二叉树，查找二叉树、AVL树，红黑树等）
4、图（图有好多种算法，深度/广度搜索，最短路径、最小生存树等）
如果你是科班的，那么这些我觉得你大一第二学期都学完是最好的了，没学完也问题不大，有些人可能是先教《离散数学》这本课，为数据结构与算法做铺垫。
书籍推荐：《大话数据结构》、《数据结构与算法分析:C语言描述版》，学哪一本？都可以，问题不大，我当时学的是第二本。大家记得根据自己的语言去学，我上面列举的，都是用 c 语言来实现的。
视频：我只看过《小甲鱼的数据结构与算法》视频，你们自己看着办吧。
2、算法的学习
在大一大二，真心建议你们把算法基本功打好，后面就真的没啥时间刷题之类的了，因为无论你以后要学习哪个方向的，算法都是实用的，会一些算法，说话也都自信了。算法的学习，刷题是必须的了，但不建议盲目刷题，而是先学习一些算法思想，在找对应的题刷，要学的主要有：
1、十大排序算法
2、递归、贪心、回溯、动态规划、枚举等
推荐书籍：《阿哈算法》、《算法设计与分析基础》适合入门；《算法第四版》、《算法导论》、《编程之美》适合进阶
视频：这种还是挺建议看书，我没看过视频，，这里就不介绍了。
书籍这里下载：少走弯路，必读计算机经典书籍推荐（含下载方式）
少走弯路，必读计算机经典书籍推荐（含下载方式）
3、保持算法的学习
算法的学习，真的是靠积累的，而刷题是必须的。而且学校都会举办一些比赛，这里还是比较建议大家去参见的，这样也能让你更加有激情着去学习。当然，每年都会有很多 ACM 编程大赛，要不要参加呢？这个看你了，也不是说参加就一定好，看你自己吧，具体可以参考我之前一篇文章说的：普普通通，我的三年大学
普普通通，我的三年大学
大家可以在 leetcode 长期保持刷题，一天一两道，或者一个星期三四道都行。
这里给大家推荐一份刷题笔记，学完应付面试基本问题不大：
下载链接：两个月斩获 70k star，前字节大神刷题笔记
两个月斩获 70k star，前字节大神刷题笔记
看过我文章的都知道，我一直强大计算机基础的重要性，所以这里必须列举要学的有哪些。刚才说了选择一门语言深入，你在深入学习的过程中，肯定也在学习学校开设的专业课，包括：计算机网络 + 操作系统 + 数据库 + 汇编 + 计算机组成原理 + 编译原理 等等。
而这些，我认为是非常重要的，对于秋招的同学来说，只要你会这些，就算你是深入学习 Java的，然后你去应聘 C++ 岗，我觉得也问题不大，你和面试官说我不会 C++ 就可以了，大不了到时候转岗。我虽然是 Java 技术栈的，但是我面的公司，都不是 Java 技术栈的，例如 小米，Shopee，字节跳动，腾讯等。但是，这些都问题不大，你只要会这些基础 + 算法，而且，在秋招，特别是对于一些大公司，关于语言的，其实问的也不是很多，基础问的特别多，所以你会基础，面试会占很多优势。下面按照学习的优先级，给这些课程排个序。
其实给他们排优先级是不大好的，这样给他们排，感觉容易被大佬喷，不过没办法，对于小白来说，我还是想排以下顺序
1、计算机网络 + 操作系统
2、数据库 + 计算机组成原理（数据库相应你们可能已经先学过 MySQL 了）
3、汇编 + 编译原理
不过，如果你们还是在校的大一大二，那么可以根据你们课程的学习顺序来，但是，我建议有时间的可以提前学，不一定要等到学校教了才学，反正大部分老师讲的很一般，但时候你学过的话，可以当做复习，或者学其他。
书籍推荐
《计算机网络自顶向下》、《图解 http》、《深入理解计算机操作系统》、《汇编语言》（王爽写的）。具体要掌握到哪个程度可以看我之前的文章了。
视频：计算机基础三门课视频
计算机基础三门课视频
对于Java，算法，计算机基础的学习顺序，假如你时间多，例如你大一或者大二，那么我觉得可以按照这个学习顺序：
1、先选一门语言入门，例如 C 语言或者 Java
2、之后学习数据结构与算法
3、之后一边学习我上面说的 Java 技术栈，一边学习计算机基础
假如你很急，时间不多了，那么我建议你先说我上面说的 Java 相关的知识，然后做项目，之后再回过头来学习算法和基础知识。
我觉得对于大学四年来学，上面这些是最核心的，也是必须学的。但是仅仅是上面这些还是不够的，上面的这些一两年就可以学完的。所以你还有很多其他时间，那么你可以学一些自己感兴趣的，多折腾，多抖鼓，而我上面学的，希望你都学。你也可以看我大学学过的一些核心基础知识：
【吐血整理】那些让你起飞的计算机基础知识：学什么，怎么学？
【吐血整理】那些让你起飞的计算机基础知识：学什么，怎么学？
前两年都在折腾，特别是第一年，但是，我始终一直学习那些比较核心的课程。再次强调，这篇文章不是让你成为大神的，学完也不是多厉害，而是，给处于大学迷茫、不知道学啥的你，一个方向，无论你是否是科班,如标题所说，普通/大众。不过我相信，当你学完了这些，你应该会有自己的学习方向了。
最后，是希望各位还在校的学生，大一可以好好浪，但也要保持应有的学习时间，之后，就好好学习吧。不管你是名校还是非名校，我觉得你在只要这几年认真学，进大公司的几率，真的非常大，这绝对不是鸡汤。
如果你觉得自己自学不行，或者想要学的更稳，少走弯路，希望有个经验丰富的人带你学，那么你报名帅地的 Java 后端训练营：Java后端训练营，你只需全力学习，剩下的，交给帅地。
Java后端训练营
学习路线",
学习路线阅读指南,"本系列会总结后端开发，前端开发，数据分析，爬虫之列的学习路线，从 0 到 1，适合迷茫的人参考。
需要说明的是，学习路线里涉及的内容不会太多，因为我觉得，内容太多，反而会让人不知道怎么学习，所以我给出的那些知识，都是相对比较刚需的，当你把这些知识学完之后，你自然会知道自己接下来要学习什么。
    平时你去知乎之类的搜索学习路线的时候，很多学习路线罗列一大堆知识点，他们自己本身有没有学习过我就不知道了，但我觉得罗列一大堆是不适合初学者的，而且会让初学者不知道如何下手学习，所以呢，我写的学习路线会尽量比较简洁，让你先掌握最核心的，当你学完这些，自己想拓展新的知识了，那会就只带该拓展些啥了。
大致的更新顺序：后端开发-》前端开发-》爬虫-》数据分析-》其他。
假如你有不错的学习路线，也可以来贡献给帅地，帅地最大的期望就是，大家都能够通过这些路线，找到属于自己的学习路线。
1. 后端通用学习路线
1. 后端通用学习路线
2. Java 后端开发学习路线
2. Java 后端开发学习路线
3. 前端开发学习路线
3. 前端开发学习路线
4. 数据结构与算法学习路线
4. 数据结构与算法学习路线
5. 如何学习计算机基础知识的？
5. 如何学习计算机基础知识的？
6. 我的 MySQL 学习之路
6. 我的 MySQL 学习之路
7. C++/Linux开发学习路线
7. C++/Linux开发学习路线
8. Go 后端开发学习路线
8. Go 后端开发学习路线
学习路线",
Go后端学习路线来了,"Go 学习路线拖了好久了，主要是 Go 不像 Java，有着丰富的学习资料 + 过来人的各种踩坑，Go 的话，网上的学习资料比较零散，而且很多还是培训机构的，罗列一大堆知识，可能初学者看了和没看一样。
不过嘛，既然要写，很多东西就得调研清楚，我先说下，我写的这个学习路线，基于校招版的哦，其实在校招中，语言的占比不大，所以一般我们深入去掌握一门语言就可以了，既然选择了 Go，那也得去掌握下 Go 的语言特性。
下面我先关于 Go 的就业岗位以及校招面试做一些问答。
Go 可以说是最近两年比较火的语言，虽然说比较火，但是岗位数量还是和 Java/C++ 没得比，当然，走 Go 的人也会少一些，至于 Java/C++ 和 Go 的就业比例，说实话，这个不好统计，我也不清楚。
只能说，Go 在大公司可能会多一点。
因为 Go 用在云原生啊，容器虚拟化，分布式存储啥的啊，可能会多一些，这这块，一般小公司做的比较少。
另外，如果很多公司之前用的架构不是 Go，你让它重新整理架构，这是一个大工程，并且 Go 的组件没有 Java 这些丰富，所以在很多公司中，Java 依然是主流，Go 在大厂中可能会多一些。
所以我觉得，大家在选择 Go/C++/Java 的时候，最好不要以岗位多不多来选择，如果是基于兴趣是最好的吧，并且在校招中，语言不是重点。
另外，目前我知道的，用 Go 最多的公司就是 字节跳动 和 B站了。
这里我强调一下，不用关心就业前景；不用关心就业前景；不用关心就业前景…
前端，Go/Java/C++，这些都是目前需求量相对比较大且比较主流的岗位，只要你学好，那都可以很香，不用关心天花板这些问题，没啥用，你能走到天花板，那就是牛人了。
当然，如果你说你要走 PHP，net 这些，那我就真的不大建议，倒不是找不到工作，而是选择面会窄，并且一般公司会找有几年开发经验的人。

  下面开始学学习路线

我觉得你学习 Go 之前应该也学过其他语言吧？如果你有学过面向对象的语言，再来学 Go，可能可以对 Go 理解的更加深刻。
我之前学过一阵子 Go，学起来还是不难，就是容易把一些语法忘了，所以在学的时候，我希望大家可以前期多做一些练习，主要就是属于语法的使用。
如果你是 0 基础的，有些学起来还是有点小难度，不过也问题不大，多看几遍就好了。
说实话，入门这块，没啥好说的，学习任何一门语言都一样，随便找个简易的教程，跟着学就行了，知识点也没啥强调的，反正都得掌握。
一般就是这几个：
1、函数：Go 的函数，还是和 Java 啥的有一点点不一样。
2、指针
3、结构体
4、面向对象的知识以及它的特性（注意和Java/C++的一些区别）
5、IO处理
5、还有一个非常重要的 goroutine 和 channel 这两个。
如果你喜欢看视频，可以在 B 站 或者木刻网找个播放量高的视频就行，这里我就不推荐了。

  咱们星期也有个 Go 的课程，里面还附带了项目，不过不适合 0 基础的同学，适合已经学过面向对象这些知识的同学，链接看这里：

如果你喜欢看文字，那么可以在菜鸟教程这里找，快速入门还挺不错：Go 语言入门
Go 语言入门
另外就是关于 Go 的书籍，目前有一本用的人比较多的是《Go程序设计语言》，这本书我看过一部分，个人觉得不适合 0 基础的初学者哈，我还是建议大家入门就找个视频或者找个简易的教程，后面入门之后，再来看这些书。
学完 Go 入门，可以学一学 Go web 开发，看看 Go 都能干些啥，不过学习 Go web 开发之前，最好是有一点前端基础，比如简单看过 html + js + css，这样在学习 Go web 的时候，会容易一些。
Go web 的话，主要就是学习下网络编程，看看 Go 是怎么进行交互的，比如你可以用 Go 做一些小项目，比如 RPC，或者通过 Go web，学习它和 Mysql, redis 这些怎么整合。
关于 Go web 的书籍：《Go web 开发》，这本书不厚，可以跟着里面写一写例子。
另外就是关于 Go 框架的，Go 的框架不算多，不过我觉得你可以基于项目来学一些框架，比如你要做个 xxx 的项目，你一般是跟着教程做的，那么看看这个教程用的啥框架，那么就去跟着学。
一般 Go Web主流的框架有 Iris，Beego， Gin 这几个
其实很多语言的学习都是类似的，包括 Java，一般就是先简单入门，看看怎么使用，之后去学习它的一些源码，另外这里我需要强调一个点：
就是要先学 Go web 还是先学 Go 进阶？
我觉得这个和 Java 或者 C++ 类似，就是先学集合的源码之后再去做项目，还是先做项目再回过头来学习源码。
我的答案是：都可以。
按照你当时的节奏以及资料顺序来就行，比如有些人的资料，里面本身就安排好了，或者有些资料在学习 Go 入门的时候，就顺带讲了很多进阶的知识了。
也就是说，没有严格的顺序，都可以，你学的顺畅就行。
至于 Go 进阶，主要有以下需要去深入了解下
1、容器类：比如map，slice这些
2、并发：主要是 channel，goroutine 这些
3、标准库：主要是 context, reflect, unsafe 这些
4、内存管理：垃圾回收这些
这几个基本都是 Go 的核心知识，可以深入去学习下，如同 Java 里的并发，JVM，集合源码啥的。
学习资料：推荐这本电子书，之前学习 Go 时还看过他不少文章，链接：https://golang.design/go-questions/
https://golang.design/go-questions/
书籍的话，就推荐：《Go语言设计与实现》，这是一本新出的书，这个人我看过他写的文字，也非常硬核。
我说过了，无论是走哪一门 语言，校招的话，计算机基础都得学，主要就是计算机网络，操作系统这些，这里我也简单说下吧，其实在其他学习路线中说过。
一般就这几你们
1、计算机网络 + 操作系统
2、数据库 + 计算机组成原理（数据库相应你们可能已经先学过 MySQL 了）
3、汇编 + 编译原理
不过呢，比较重要的是计算机网络 + 操作系统 + 数据库，这三门我单独拿出来说一下重点吧。汇编 + 编译原理 不学也没事，学校有开课就学下，没开就不理了。
无论你是从事啥岗位，无论是校招还是社招，计算机网络基本都会问，特特是腾讯，字节，shopee，小米等这些非 Java 系的公司，问的更多。
计算机网络就是一堆协议的构成，下面是一些比较重要的知识点，学的时候可以重点关注下。
物理层、链路层：
网络层
传输层（主要就是 TCP）
应用层
书籍推荐：零基础可以先看《图解HTTP》，当然，也可以直接看《计算机网网络：自顶向下》这本书，这本书建议看两遍以及以上，还有时间的可以看《TCP/IP详解卷1：协议》。
帅地也写过一个极简入门教程：www.iamshuaidi.com/359.html
www.iamshuaidi.com/359.html
学完之后可以刷一刷对应的面试题，可以在帅地的网站看：计算机网络面试真题
计算机网络面试真题
操作系统和计算机网络差不多，不过计算机网络会问的多一些，操作系统会少一些，总结起来大致：
1、进程与线程区别
2、线程同步的方式：互斥锁、自旋锁、读写锁、条件变量
3、互斥锁与自旋锁的底层区别
4、孤儿进程与僵尸进程
5、死锁及避免
6、多线程与多进程比较
7、进程间通信：PIPE、FIFO、消息队列、信号量、共享内存、socket
8、管道与消息队列对比
9、fork进程的底层：读时共享，写时复制
10、线程上下文切换的流程
11、进程上下文切换的流程
12、进程的调度算法
13、阻塞IO与非阻塞IO
14、同步与异步的概念
15、静态链接与动态链接的过程
16、虚拟内存概念（非常重要）
17、MMU地址翻译的具体流程
18、缺页处理过程
19、缺页置换算法：最久未使用算法、先进先出算法、最佳置换算法
书籍推荐：《现代操作系统》
这里也有一门合并的视频：计算机基础三门课视频
计算机基础三门课视频
操作系统也一样，看到可以来网站刷面经，通过面试题来复习：操作系统面试题阅读指南（必看）
操作系统面试题阅读指南（必看）
数据库一般主流的有 MySQL 和 Oracle，不过建议大家学习 MySQL 了，因为大部分公司都是使用 MySQL，也是属于面试必问，而且工作中 MySQL 也是接触的最多的，毕竟工作 crud 才是常态。
下面这些是我认为比较重要的知识点：
1、一条 sql 语句是如何执行的？也就是说，从客户端执行了一条 sql 命令，服务端会进行哪些处理？（例如验证身份，是否启用缓存啥的）。
2、索引相关：索引是如何实现的？多种引擎的实现区别？聚族索引，非聚族索引，二级索引，唯一索引、最左匹配原则等等（非常重要）。
3、事务相关：例如事务的隔离是如何实现的？事务是如何保证原子性？不同的事务看到的数据怎么就不一样了？难道每个事务都拷贝一份视图？MVCC 的实现原理（重要）等等。
4、各种锁相关：例如表锁，行锁，间隙锁，共享锁，排他锁。这些锁的出现主要是用来解决哪些问题？（重要）
5、日志相关：redolog，binlog，undolog，这些日志的实现原理，为了解决怎么问题？日志也是非常重要的吧，面试也问的挺多。
6、数据库的主从备份、如何保证数据不丢失、如何保证高可用等等。
7、一些故障排查的命令，例如慢查询，sql 的执行计划，索引统计的刷新等等。
对于 2-4 这四个相关知识，面试被问到的频率是最高的，有时候面试会让你说一说索引，如果你知道的多的话就可以疯狂扯一波了，具体可以看我写的 MySQL 学习路线：肝完了，我的 MySQL 学习之路
肝完了，我的 MySQL 学习之路
书籍：《MySQL必知必会》和咱们星球里的 MySQL实战45讲：MySQL实战45讲
MySQL实战45讲
八股文大家基本都知道是啥，不过很多人都没有把 Linux 写上去，其实 Linux 的范围很大，例如 Linux 内核啊，Linux 网络编程等等。
这种不同的岗位可能需要掌握的要求不同，所以我也不讲这些，今天主要帮大家捋一捋 「Linux 基础」这块，就是面试中有可能会问到的，这块需要准备的还是比较少的，下面做一些汇总，方便帅友们到时候可以更加有针对性去复习。
另外，基础操作命令我就不说了，就说一些需要注意的点
基础
1、文件系统：主要就是要了解下 inode，block，superblock，block bitmap 这些关键词的含义。
2、目录的大致含义：例如像 proc 这个目录就放一些进程相关的信息，默认软件安装在 usr 目录等等，这其实是一种规范，这个要大致了解下。
3、文件一些属性：例如有些文件可读，可写，可执行，对应 rwx 权限这些， 通过 d 可以知道这个一个目录等等。
4、软连接与硬链接
5、VIM 的几种模式区别了解一一下
进程与内存等(这块是重点)
1、几个进程命令：ps，top，pstree，netstat，这几个进程要自己用一用，工作后经常用到的，重点学习了解下。
2、Linux 进程的一些状态，记得好几种：R，D，S，Z，T 这五种，要了解下。
3、孤儿进程，僵尸进程 要知道（重要），然后还得知道如何解决这种情况，例如出现大量僵尸进程怎么办
4、中断相关：软中断啊，不可中断状态啊
5、内存中的 Cache 和 buffer 的区别
6、了解 Swap 区
7、SiGCHLD 信号，waitpid() 和 wait() 函数
几种重要的 IO 模型
1、同步，异步。
2、阻塞与非阻塞
3、select，epoll
学习资料指导
有时间 + 零基础的，就看下《鸟哥Linux私房菜》这本书吧，讲的很细，可以看下，跟着做实验，容易做的实验可以跟着做，麻烦的就不需要了，看前面基础的部分就行，后面的可以不看了。
但是呢，这本书只是入门，其实很多没讲的，例如 select，epoll，僵尸进程啥的啊，这种一般，你们哪个不同就看找对应的文章就行，通过文字来逐个了解突破哦。
暂时先说这么多，后面再慢慢补充了，我说的这些都是我自己当时学过的，可能不是那么全，但是核心的基本都说了。
算法冲击大厂必须学的了，这里不强调了，看我这篇文章：https://www.iamshuaidi.com/301.html
https://www.iamshuaidi.com/301.html
除了语言和框架部分，计算机基础和算法，不过啥学习路线都是差不多滴。
当然，如果你的目标是面试小公司，那么计算机基础和算法可以少学一点，先把 Go 这块相关的技术栈先学起来哦。大家加油勒！
最后，欢迎大家加入帅地的知识星球，其实大部分情况下，大家都很努力，如果有个过来人指点一下，推一把，或许你可以走的更快
帅地会在星球知无不言，无论是 学习规划，offer 选择，简历修改，还是学习路线，帅地都会在 48 小时以内答复你的问题，并且根据你自身的情况，为你量身定制学习路线。
知识星球详情：知识星球
知识星球",
