问题,回答,所属分类
字节跳动Go岗开发面经汇总,"本系列将提供字节跳动Go岗历年面经，所有面经都有候选人面试之后根据回忆整理而出，大家可以通过面经来复习以及看看字节跳动面试难度。
为了方便大家复习，这些面试题的展示采取了右边面试题目，左边答案的方式，方便大家按需查看。
由于手机端不支持这种展示方式，当然，为了手机方便阅读，下面会贴出所有面试题答案链接，不过大家最好在 PC 电脑端阅读哈，相关面试题还会持续更新，尽量补充完善起来，建议收藏帅地的网站哦。
1. 【字节跳动】Go岗-秋招后端提前批
1. 【字节跳动】Go岗-秋招后端提前批
2. 【字节跳动】Go岗-后端高频面试题
2. 【字节跳动】Go岗-后端高频面试题
3. 【字节跳动】Go岗-懂车帝的后台日常实习
3. 【字节跳动】Go岗-懂车帝的后台日常实习
4. 【字节跳动】Go岗-后台开发社招面经
4. 【字节跳动】Go岗-后台开发社招面经
5. 【字节跳动】Go岗-热乎的后端面经(四轮已拿offer)
5. 【字节跳动】Go岗-热乎的后端面经(四轮已拿offer)
6. 【字节跳动】Go岗-被data系统架构部门捞起来了
6. 【字节跳动】Go岗-被data系统架构部门捞起来了
7. 【字节跳动】Go岗-社招三轮附学习感想与经验
7. 【字节跳动】Go岗-社招三轮附学习感想与经验
8. 【字节跳动】Go岗-教育业务后台开发
8. 【字节跳动】Go岗-教育业务后台开发
9. 【字节跳动】Go岗-data后端暑期实习
9. 【字节跳动】Go岗-data后端暑期实习
10. 【字节跳动】Go岗-抖音后端实习
10. 【字节跳动】Go岗-抖音后端实习
Go开发岗
字节跳动面试

ㅤ普通",
【字节跳动】Go岗-秋招后端提前批,"岗位：后端开发工程师
地点：杭州
主要还是在聊项目，没有考别的基础知识了
总的来说，面试的时候还是有很多的不足，每次面试都是一次学习的过程。
Go开发岗
字节跳动面试

ㅤ普通",
【字节跳动】Go岗-后端高频面试题,"三面体验很差， 先是面试官迟到，后来面试官说中途离开10分钟，结果离开了一小时还没回来，然后我找到hr，发现他去开会去了，hr说这次面试结束。 第一次遇见这样面试的。三面后是hr面，感觉hr很傲慢，可能是我要的有点多，又加了一面技术面四面。
Go开发岗
字节跳动面试

ㅤ普通",
【字节跳动】Go岗-懂车帝的后台日常实习,"背景：
研一，非科班，Top2；
之前一直不知道以后做些什么，疫情期间和其他人交流之后决定走开发，大概开始学习是6月上旬；
在同学的怂恿下投了懂车帝的后台开发日常实习，每天就一直在疯狂地刷题、看书、看面经，因为实在不太自信；
慌手慌脚地就投了，突然就要开始面试了，其实自己知道还缺不少斤两。
技术栈主要是 Go，项目写了简单的网站、简易的分布式缓存、实现了 Raft 协议；
然后力扣刷题大概刷了 200 题，主要是树、双指针、剑指和其他一些乱七八糟的，
其实刷的题目都比较简单，高中学过竞赛可能会稍微熟悉一点（其实早忘光了）；
个人前一个月主要在补操作系统、计算机网络之类的知识；
看的东西比较多，但是都不深入，导致面试问啥能讲点但是深入就 GG。
字节的效率太快了，快到我措手不及，傍晚投完简历晚上就过了，第二天大睡午觉的时候 HR 电话过来要约面试；
而且前一天晚上吃了冰西瓜几年没发作老肠胃病怒犯，凌晨就去医院挂水了，属实惨；
也就是说面试前的准备时间，基本用来磨磨蹭蹭恢复身体上了，而且也就两天时间。
自我介绍，非科班问了一些问题，为什么转开发；
算法：
两数之和，讲了 O(n) 时间的算法，再改用 O(1) 的空间，用快排排序，问了时空效率，让改成非递归快排；
进程和线程的区别；
进程间通信的方式；
TCP 连接的客户端和服务端状态。
自我介绍，问了非科班的问题，学习和规划是怎么做的，和科班比有哪些不足，之类的；
LRU 算法里面，键值的存储形式，值 interface；
interface 不是个好的形式，会导致 GC 压力大，为啥，那用什么形式比较好；
goroutine 里面 panic 了会怎么样；
map 是否是并发安全的，不是如何做到，还有什么其他方法；
不加锁并发读写 map 会出现什么问题；
redis的数据类型；
redis的 zset 底层是如何实现的，zset 根据 member 查询 score 的效率，zset 获取排名的效率；
raft 解决了什么问题；
raft 脑裂是怎么解决的；
提出一个场景，根据 raft 协议接下来会怎么样；
虚拟内存的概念，为什么要保护物理内存；
页面置换算法；
session 和 cookie，为什么用 sessionId 不用 uid；
算法，给出字符串和字符，等概率地输出一个字符所在的位置；
再写个 SQL 查询。
体验：
一面很快就结束了，非递归快排没见过但是也能很快写出来，然后空间效率也算出来了。
二面还是比较难，不少是从项目延伸开来，然后更加深入和更偏工程化，经验不足的就答不上来，倒是 raft 可能讲得比较详细；
操统和计网的知识没怎么考察，Go 的考察了但是正好没准备到，之前看过忘了；
算法题偏数学了，没抽象出来，提示了一下发现高中甚至初中时候绝对碰见过，还是想不出来，再交流突然就抽象出来了。
个人感觉字节的面试可能还是比较少看你背书的情况；
最好就是能以自己的语言讲出来，尤其是项目的问题，要有自己的理解，最好再越过本身更深入一些。
两次面试间隔很短，确实还是蛮耗体力的，尤其是知识水平不够答不出来的时候，挠挠头皮硬撑过去；
二面真的是发现自己还缺太多东西，然后面试官也很好，给我讲了好多需要努力的地方，然后鼓励我好好加油，还问了之后的规划。
总结就是面试体验极好，感谢面试官，而且还是能认识到好多不足的地方，以后继续加油，再许个愿！！！
Go开发岗
字节跳动面试

ㅤ普通",
【字节跳动】Go岗-后台开发社招面经,"1、请详细描述三次握手和四次挥手的过程，要求熟悉三次握手和四次挥手的机制，要求画出状态图。
2、四次挥手中TIME_WAIT状态存在的目的是什么？
3、TCP是通过什么机制保障可靠性的？（从四个方面进行回答，ACK确认机制、超时重传、滑动窗口以及流量控制，深入的话要求详细讲出流量控制的机制。）
4、描述线程、进程以及协程的区别？
5、GO语言中的协程与Python中的协程的区别？
6、网络IO模型有哪些？（5种网络I/O模型，阻塞、非阻塞、I/O多路复用、信号驱动IO、异步I/O）
7、I/O多路复用中select/poll/epoll的区别？
8、客户端访问url到服务器，整个过程会经历哪些？
9、描述HTTPS和HTTP的区别。
10、HTTP协议的请求报文和响应报文格式。
11、HTTP的状态码有哪些？
12、描述一下redis有哪些数据结构。（基础的数据结构有5种，String/List/Hash/Set/Zset；高级数据结构有：HyperLogLog/BitMap/BloomFilter/GeoHash）
13、面试官还问了BloomFilter的原理以及Zset的实现原理。
14、MySQL场景题目（面试官提供场景，要求写出查询SQL，考察联合语句，如何分页以及复杂语句的优化）
15、裸写算法：树的非递归先序遍历。
1、先详细介绍最近的项目，之前项目经验里写了一个分布式的项目，面试官着重讨论了这个项目的实现方案，引申出分布式事务以及分布式一致性等问题，同时会要求在当前项目的基础上附加条件，要求提供解决方案。
2、还问了一些API业务的架构问题，负载均衡、CDN、DNS等问题。
3、也问到了HTTP相关问题，要求描述HTTP的版本之间的区别，主要是1.0/1.1/2.0三个版本的区别。
4、裸写算法：回行矩阵遍历。
1、首先也是考察项目经验，但是着重系统设计，会抽一段之前的项目经验(跟二面的经验肯定不同)，要求你描述目前的方案，以及缺点。
2、要求模块化，如果要求对目前系统做微服务架构，如何进行服务的拆分，拆分的规则是什么，考察微服务架构相关知识，服务治理（限流、降级、熔断）。
3、裸写算法：二叉树多个节点的最近公共祖先。
Go开发岗
字节跳动面试

ㅤ普通",
【字节跳动】Go岗-热乎的后端面经(四轮已拿offer),"个人情况
211本 工作两年半 一直在写C++
面试部门
字节跳动上海穿山甲团队
面试时间
10.20-11.14
算法题：LRU缓存实现，要求set\get操作o(1)时间复杂度，leetcode有原题
技术问题：
算法题：一个N位数K，从N位中去掉M个数字，使剩下的数字最大，leetcode有类似题
技术问题：
算法题：单链表排序
（聊了很长时间的项目经验，问了啥问题已经是想不起来了…）
技术问题：
算法题：二叉查找
技术问题：
Go开发岗
字节跳动面试

ㅤ普通",
【字节跳动】Go岗-被data系统架构部门捞起来了,"投了武汉字节，简历挂
被北京data系统架构部门捞起来了
基础：
设计题：
算法题：
主要问的项目
与项目无关的基础：
高等数学：
算法题：
更新一下，今天拿到offer辣！
Go开发岗
字节跳动面试

ㅤ普通",
【字节跳动】Go岗-社招三轮附学习感想与经验,"简单介绍下背景：本人已工作两年，这次属于社招，不是校招哦！投递的岗位base是北京。
算法题：
给出两个 非空 的链表用来表示两个非负的整数。其中，它们各自的位数是按照 逆序 的方式存储的，并且它们的每个节点只能存储 一位 数字。
如果，我们将这两个数相加起来，则会返回一个新的链表来表示它们的和。
您可以假设除了数字 0 之外，这两个数都不会以 0 开头。
示例：
输入：(2 -> 4 -> 3) + (5 -> 6 -> 4)
输出：7 -> 0 -> 8
原因：342 + 465 = 807
算法题：
给定一个数组代表股票每天的价格，请问只能买卖一次的情况下，最大化利润是多少？日期不重叠的情况下，可以买卖多次呢？
输入: {100, 80, 120, 130, 70, 60, 100, 125}
1）只能买一次：65（60 买进，125 卖出）
2）可以买卖多次: 115（80买进，130卖出；60 买进，125卖出）
输出买卖的序列和最大利润
自我介绍；
介绍项目情况，重点说了近一年的工作项目的大概；
研究生在校的研究内容之类的，比较杂；
项目中的技术亮点：了解几个，面试官貌似对这些也不是很感兴趣，这估计也是后面他觉得我没有成长的原因吧，可能认为这些东西我在之前就应该都学会了的；
实现简单令牌桶算法，没有考虑随时间滑动的情况；
加强版：令牌桶，加上随时间滑动的要求，即：限制用户在任一连续的一小时内，不能超过5W的请求。这边提到了说将一小时分成多格，比如60格这样的，面试官点头貌似同意了，然后就实现代码了，包括协程异步更新时间窗口；
没有基础知识问答；
没有算法题；
三面反问环节，问：我咋样？（措辞是： 这简短的面试交谈过程中，您觉得我咋样？）
面试官说，我这一年来成长不大，几乎没变化，可是我觉得这一年来才是稍微有点儿进步的呀。
不过，经过这么一问，觉得反问环节也挺有意思，以后如果再有面试，反问环境可以多问些面试官关于我们自己的评价和看法，比如：上面说的您觉得经过这一小时的交流，我整体怎么样？如果像上面的面试官说最近一年进步不大，那么应该继续追问：那您觉得应该向什么方向去深入学习和思考比较好呢？态度诚恳一点就行，作为面试官人家还是乐意帮你指出不足之处的。
而上述的两个问题：我咋样和如何改，抛开offer不谈，这两个问题我觉得可以说是正常面试最大的收获了。而面试之前准备的那些知识毕竟比较零散，还是需要靠平时的积累来巩固。面试最重要的是让他人来评价你，以前没反问这两个问题的时候，这些评价人家面试官基本不会主动告诉你，只会整理一下然后录入到公司的人才管理系统，以供后续评价。但你现在反问一下，就可以得知这两条信息，这些评价信息对你来说才是最有用的，放在公司它只是大量候选人评价数据中的一份，可有可无。但对你来说却是个宝贵的信息，你可以据此从别人的视角来审视自己，这种换个角度的审视比自己平日里思考写总结来得客观。毕竟你表现出来的才是客观的，内在的其他没表达出来的方面只能说你表达能力不行，也是种缺点，需要反思之一。          如果没有进行这样的反问，就不能更加全面的得知别人对你的看法，也就错过发现自己弱点和改正的机会，以前面试反问环节都是傻傻的问一些没多大意义的问题。今后应当多注意，要懂得跟面试官“要回”属于你的那份评价信息。
以上就是面试过程中涉及的一些内容，属于流水记账式的列了一下，下面谈谈一些感想吧。
上述的感想也是比较离散、杂碎。还想再分享一下个人的一些学习经验，欢迎交流指正，正文如下。
技术面结束之后，今后对于基础的知识的学习可能没有这几天这么紧凑了，短时间填鸭式的学习大脑有点忙，不过这种感觉也还行，接触到了新知识有点成就感。当你在浏览面经的时候，里面提到的问题你觉得你都会了，是不是也有种自我肯定的情绪呢。
不过，面经里面提到的知识都是比较分散的，毕竟在那么短的面试时间内，面试官也只能随机抽样的检查，没时间做太全面的交流。这也导致我们看面经的时候都是比较分散的知识点，所以需要在今后，持续的学习，每段时间都专心研究某个知识系列，系统性的学习比较有效果，也比较全面。比如MySQL、Redis、ZooKeeper、MQ、JVM、OS、网络、算法等。
就算法来说，它是需要长时间的积累，短时间内的突击效果不是特别大，也累。所以今后对于算法的学习可以这么来：每日一题、或者之前做过的题目每天拿一两题出来再做一遍，重新思考，深入的多看看题解体会体会，不再是赶时间的去冲量。学会总结，理解每个算法与数据结构的含义，时间久了就能做到不变应万变。
另外，算法大部分还是属于背诵题，不少题目把模板写出来就完成的差不多了，只需要把细节处理一下就差不多了。时间久了，这些模板题就变成条件反射，此时对高级的数据结构也会有进一步的了解，思考速度和解题能力都有所进步。
OS和网络也差不多，这三者属于平日工作都很少直接能够体现出来的知识，平日工作用得少，又没去复习时间一久就会忘记，  用进废退，  人之常情嘛。所以才像上面说的，应该要坚持每日一题、或者时不时挑一些做过的题目重新做做，主要是为了保持手感，而做过的题目拿出来再做一遍也不会花太多时间，这样在日常工作之余也比较容易坚持下来。通过这段时间的面试准备，算是把算法入门，找到刷题的状态了，此后应该如上所说，坚持每日复习做做老题，偶尔周末时间充裕跟着“每日一题”做做新题，保持下去。
说回OS和网络，这类知识对于逻辑思维的要求没有算法题那么高，算法题属于“CPU相当密集型”，不练就不会。而OS和网络这类可能更多的是理解之后带点记忆的知识，做点输出存到笔记或者博客，定期来回顾回顾就行，属于“轻微IO密集型”，看完之后一段时间，也多少还有些印象，能够知个大概。每两年重看相关书籍，复习一下就可以巩固。
整个计算机体系，包括底层硬件组成原理、再上的操作系统和网络，这些之间其实都是有逻辑关系在的。可以OSI七层或者TCP/IP四层模型来看，它们就是个整体，全部理清之后，在大脑内可以存在相当长的时间。日常工作和生活中，只要遇到计算机相关的问题，大多都可以从这个整体来思考，这种思考也算是种回顾复习。
相比而言，算法算是比较离散的，排序、BFS/DFS、DP等之前的联系不是特别的紧密，至少没有像上述OSI七层
关于今后保持基础知识学习的想法，首先算法就如上述所言，每日一题、或者做过的题目重做，这样是为了不给本来就忙碌的工作日增加太大的压力，用简单的算法题来放松放松就行，搞几个AC找找成就感。
而对于基础知识，前期打算继续多翻阅翻阅面经，以面经中的题目为切入点，来复习（好像技术博客首页的文章也是个不错的切入点）。复习过程中再由点及面的去谷歌各种不明白，每个疑问点在输入谷歌之后，一次性多打开几个页面，多看多对比然后结合整理自己的理解，输出到日记或者博客中。比如，最近看到个比较经典的题目是MySQL的隔离级别，这个问题谷歌一搜，大部分都有提到MVCC、当前读、快照读、行锁、间隙锁，都什么知识啊，反正对于工作经验尚浅的我来说，已经触及到知识盲点了。也好，这些点都记下来，一个也别想跑，然后再分别谷歌这些知识点，可能又会引出一些更加底层的、你没见过的知识点，也没关系，继续记录继续搜。
今后可能又会看到MySQL索引相关的面试题，搜这个的时候，也许会碰到MyISAM、InnoDB、B/B+树、磁盘IO块与系统页、主索引与辅助索引、m叉树的分裂与合并……之类的，这样对MySQL的认知又多了一些。过些时日，你可能想着完整的去学一遍，这时候买本《高性能MySQL》来看，而且你之前学到的隔离级别、索引它里面都提到了，并且更加全面和仔细，从基本概念的出现到最终的常用场景，都给你列出来了。
上述之所以要先从面经题目切入学习是因为个人在看书的时候，总有种大而全的感觉，书毕竟比较理论，面面俱到，有用的没用的都会列出来。而面经上的题目是面试官结合当下工作内容提出的，有可能就是他最近工作中遇到的问题，直接抛给你看你怎么思考。那么这种面经题目就比较有意思，贴合实际工作，能够更好理解，经过面试官这么一折腾印象也更加深刻。这种零散的知识点学的差不多了，再来看书，就比较有感觉，知道书中哪些地方是重要知识，哪些地方其实没那么实用作为了解即可。
其实，日常工作中不管是用到的知识，还是遇到Bug，所涉及的知识点也是比较随机离散的，类似上面浏览面经过程中遇到的问题，看缘分。而在项目排期不那么紧的时间段里，找本书系统化的把之前的碎片化知识点串起来，就很有必要了，既是总结也是巩固。
关于学习的另一个观点：任何事物都是从小发展到大，学习的时候应该从它过去小的规模，跟着时间推移发展壮大，逐步去了解。比如学习Linux内核可以从早期低版本、JVM、Spring也类似，早期规模小，结构相对简单，比较容易理解。再逐步的按照发展需要，增加各种功能模块，直到当前最终版本。这样的学习路径可以清楚的知识系统中各个模块的由来与作用，也能够知道哪些是基础重要模块，而哪些是为了解决历史特定问题的模块，理清主线。
再举个例子，前些时候看到一篇关于限流的文章。文章一开始先从简单计数谈起，对于早期应用来说，简单的计数算法确实够用，后来随着业务的发展细化，简单计数粒度不够细，所以需要有类似滑动窗口这种效果的限流，也就衍生出了令牌桶和漏桶两种限流算法。
最后放上一个不错的记忆法——艾宾浩斯记忆规律，嗯就是小时候书上介绍的那个。新知识学习之后，分多次，每次不同间隔的去复习，大概十来次就能较好的将短期记忆转化为长久记忆了。而且学过之后，第二遍开始重新复习就简单多了，因为都理解过并整明白了，再重新复习更容易，更快，更省时。
之前考研的时候，背单词就隐约有用到这种方式。整本单词书，第一遍先花个三个月背一遍。之后，第二遍开始就越来越短，越来越快(这都什么虎狼之词)。前些时候背诵《道德经》也是类似，用了个APP，把每天背诵好的篇章截个图放到这个APP中，然后它会根据艾宾浩斯曲线的规律节点，定期提醒你复习。你要做的就是当它提醒的时候，打开快速默念一遍，默写一遍就可以勾掉了。还是那句话，第二遍越到后面，所花时间  就越来越短，越来越快。
以上，关于是学习方式和记忆方法的一些经验分享。最后再说句，任何工作和学习都是需要背诵记忆的，以此为基础来进行创作、推理和总结。比如何洁，他也是背过了大量的棋谱之后，再结合自身的想象力和逻辑能力，才有精湛的棋艺；比如钢琴家，也是需要背大量的琴谱、***，之后基于此再结合生活经验和灵感，来进行创作。巧妇难为无米之炊，脑中记忆的内容就是我们的大米，只有拥有大米，才有做出香喷喷的米饭的前提。并且大脑擅长的就是记忆，他就像是缓存，之前推理过的经历过的直接缓存在大脑中，之后如果再次遇见，直接查出来返回即可。
所以还要再啰嗦的说下关于人尽皆知的记忆方法，是想强调任何学习和工作，它首要做的就是先去记忆，背一些概念。所以学习新知识的时候，遇到太多的概念不用慌，先背下来，背不住的就记在小本本上，常回顾。背到一定量之后就能产生质变，之后各种脉络也就慢慢打开了。
加油，米娜桑！
Go开发岗
字节跳动面试

ㅤ普通",
【字节跳动】Go岗-教育业务后台开发,"1月28日 这次的二面结束后，面试官立马就安排了三面，一共持续了110分钟左右，以下问题是二面和三面的问题合集
TCP连接全过程；三次握手过程；二次握手行不行；TCP四次挥手过程；TCP的重传；
浏览器输入URL到渲染页面的全过程；
TCP拥塞控制方法；什么是TCP连接复用；TCP滑动窗口，发送窗口，接收窗口；
如果让你来实现客户端和服务端文件发送和接收的进度条，你会怎么实现；（我说的是通过已发送的字节数比上总字节数来实现进度条）；面试官接着问，你是如何判断已经发送的字节数的呢（我说通过tcp报文中的序号字段）
进程间通信方法和线程间通信方法
手写了两个SQL的查询。用到了order by, limit, having, count, avg, desc这些关键字；面试官问，SQL查询语句中关键字的执行顺序是什么
SQL查询语句是怎么查询的，即执行查询语句的过程
MYSQL的事务隔离级别；MYSQL ACID；MYSQL索引，主键索引，普通索引，唯一索引，回表；普通索引与唯一索引的区别；MYSQL最左匹配原则；
给你一个场景：有很多个人，数据库里存了他们的姓名，性别，年龄，问你用什么作为索引查询更快；
DNS的过程，DNS劫持是什么；
POST与GET的区别；
64匹马，8条赛道，问最少几次赛跑可以找到最快的4匹马
手写代码： 1. TOPK算法，找出一个未排序数组中第K大的数；
2.求一个二叉树中两个节点的最近公共父节点；
3.实现一个队列的数据结构，底层用定长数组来实现（我用Go,面试官让我用Slice实现。由于我用到了Slice的复制数组操作，面试官说不能使用复制操作，目的是考查使用环形数组来实现队列）
讲自己的个人项目，面试官会抓住其中几个点问问。
2月9日，收到 offer call !!!，成功拿到offer，各位朋友也加油!!!
Go开发岗
字节跳动面试

ㅤ普通",
【字节跳动】Go岗-data后端暑期实习,"22届暑期实习。二月末就投了，约的晚一点面试，多准备一下，就到3月末了。
一面结束后，直接进行二面
二面当晚约了hr面，效率属实高。
聊日常学习，校内情况，介绍了项目和难点，个人优缺点等
Go开发岗
字节跳动面试

ㅤ普通",
【字节跳动】Go岗-抖音后端实习,"（上面是现在能想起来的了，之后想起来会加）
leader面的，看着就很强
问我了不了解redis的底层实现（我不知道这个）
然后面试官相当于带着我推，推的过程中重要讲的是skiplist以及skiplist的modification等等。
算法题问的是LRU的缓存机制。
三面结束过了几天hr面确定给offer了….
Go开发岗
字节跳动面试

ㅤ普通",
阿里巴巴Go岗开发面经汇总,"本系列将提供阿里巴巴Go岗位历年面经，所有面经都是候选人面试之后根据回忆整理而出，大家可以通过面经来复习以及看看阿里巴巴面试难度。
为了方便大家复习，这些面试题的展示采取了右边面试题目，左边答案的方式，方便大家按需查看。
由于手机端不支持这种展示方式，当然，为了手机方便阅读，下面会贴出所有面试题答案链接，不过大家最好在 PC 电脑端阅读哈。
相关面试题还会持续更新，尽量补充完善起来，建议收藏帅地的网站哦。
1. 【阿里巴巴】Go岗-淘宝事业部社招
1. 【阿里巴巴】Go岗-淘宝事业部社招
2. 【阿里巴巴】Go岗-阿里云实习
2. 【阿里巴巴】Go岗-阿里云实习
3. 【阿里巴巴】Go岗-新鲜的大厂面经~
3. 【阿里巴巴】Go岗-新鲜的大厂面经~
4. 【阿里巴巴】Go岗-秋招六轮
4. 【阿里巴巴】Go岗-秋招六轮
5. 【阿里巴巴】Go岗-后端社招面试经历
5. 【阿里巴巴】Go岗-后端社招面试经历
6. 【阿里巴巴】Go岗-非科班菜鸡的实习
6. 【阿里巴巴】Go岗-非科班菜鸡的实习
7. 【阿里巴巴】Go岗-春招实习阶段性总结（已OC）
7. 【阿里巴巴】Go岗-春招实习阶段性总结（已OC）
8. 【阿里巴巴】Go岗-后端一二三面凉经::>_<::
8. 【阿里巴巴】Go岗-后端一二三面凉经::>_<::
9. 【阿里巴巴】Go岗-阿里云实习面经
9. 【阿里巴巴】Go岗-阿里云实习面经
10. 【阿里巴巴】Go岗-暑期后端开发
10. 【阿里巴巴】Go岗-暑期后端开发
Go开发岗
阿里巴巴面试

ㅤ普通",
【阿里巴巴】Go岗-淘宝事业部社招,"自我介绍
1.mysql的索引都有什么，说说区别（mysql不熟，说pg的）
2.用户在网页上输入一个url后发生了什么
3.讲讲https的过程
4.讲讲tcp 4次挥手过程
5.客户端4次挥手后处于什么状态，为什么是2msl
6.redis常用数据结构
7.java熟吗（不熟….）
8说说线程进程协程区别
9算法题：n个小朋友手拉手围成一个环，1-3报数，报到3的退出，最后剩下的是的小朋友的下标
10.提问环节
自我介绍，项目介绍
1.上来先说整体流程，前30min候选人主讲项目，面试官会有打断，后面时间是算法题和提问环节
2.先怼项目：
1）为什么要自研批处理程序，不用flink或spark streaming什么的
2）flink了解吗（不了解）
3.你们这项目好多单点，为什么不做高可用考虑（我能说海外小公司，没时间搞吗）
4.Raft协议的论文有看过吗，大体讲讲，还问了个什么细节记不清了，也没答上来
5.Gossip协议了解吗，说说原理和使用场景，为什么不能用它做主从选举
6.redis整体架构说说
7.redis的主从切换流程
8.用redis实现分布式锁有什么潜在的问题
9算法已经没时间了，而且前面被怼的不行，题主当时处在一个懵逼的状态
10.提问环节
Go开发岗
阿里巴巴面试

ㅤ普通",
【阿里巴巴】Go岗-阿里云实习,"40 min
自我介绍
项目
缓存穿透
分布式缓存：如果客户端想保存热点数据，如何设计？
热点数据如何从存储节点同步到客户端？是推送还是拉取？
更新数据库，如何保证缓存一致？
MySQL binlog
介绍一下go
go 的调度模型
介绍了一下部门
最近学习的东西
在线写一个LRU
如何加锁
50 min
在线写hashmap
介绍项目
http 请求和响应头
https 建立连接的过程
go GC
对阿里的看法
给了建议，代码细节需要多注意，平时要多做单元测试
60min
自我介绍
项目
服务注册中心
有没有做过被实际应用的软件项目
熟悉的技术
mysql为什么用B+树
如果硬盘的随机访问性能大幅提升，mysql 的存储结构能否优化
其他的存储结构？哈希表怎么存？
用哈希的方式，增删改查相比B+树有什么区别？
介绍项目组
三面结束后正好2周才联系hr面
自我介绍
读研吗
介绍一下校内成就？paper，奖学金，竞赛？
介绍技术栈
为什么选择golang
如何平衡学业和学习技术的时间
遇到技术难题怎么解决
倾向的城市？
还投了其他公司吗？流程到哪了？
期待在实习过程中获得什么
倾向哪种类型的公司？
生活中特别down的时候怎么调节
后续
hr面之后第二天就收到意向书了
许愿offer
Go开发岗
阿里巴巴面试

ㅤ普通",
【阿里巴巴】Go岗-新鲜的大厂面经~,"1.请说一下mysql的事务隔离级别。
由于我对这里比较熟悉，所以主要讲了一下“write skew“和“Phantom“,以及”repeatable read“和”snapshot isolation“，面试官显然对这部分了解不多，然后我又讲了一下mysql的mvcc和加锁策略，以及tidb的乐观事务模型。接着说了一下数据库如何实现ACID的，以及事务的调度算法。
参考《A Critique of ANSI SQL Isolation Levels》和《数据库设计与实现》。
2.简要说一下kafka。
主要回答了一下broker，分区，isr，储存方式，零拷贝。然后扯了一下zookeeper的设计以及zab协议。
参考《Kafka权威指南》《从Paxos到Zookeeper分布式一致性原理与实践》和《ZooKeeper: Wait-free coordination for Internet-scale systems》
3.算法题，leetcode 中等难度通过率31%
在指导下做出来了。
4.说一下go协程设计
由于自己用c实现过协程，所以答的很随意。讲了一下函数调用约定，栈布局，上下文切换，x86寄存器，又讲了一下用gcc的”-finstrument-functions”。然后讲了一下go的调度思路。
参考go源码runtime.schedule
5.说一下epoll
讲了epoll跟select的区别，然后回答了et和lt的区别以及使用场景。又回答了一下go的设计思路。
参考man 7 epoll和go源码 runtime.netpoll
1.讲一下raft算法
讲了一下leader选举，日志复制，应用到上层状态机这三部分。
参考《In Search of an Understandable Consensus Algorithm》
2.讲一下cap定理
回答了一下概念。然后结合 mysql(同步复制，异步复制),kafka(isr)，etcd(raft),zookeeper(zab)讲了一下各自是什么系统。
参考《ddia》
3.算法题 链表排序
先用插入排序做出来了，
让用快排做，不会做。
然后问时间复杂度，这个回答错了，
接着又让证明，结果又证明出来了个logN…
4.又问了一道算法题
很水的题目，忘记了。
5.讲一下fork原理。
背了几个步骤，回答了一下。
参考《深入理解linux内核》
6.如何设计一个朋友圈。
没啥思路，在指导下写出来了。
1.zab，raft，paxos协议的区别。
回答了一下raft，然后有点蒙也不知道回答什么。
2.讲一下canal
说了一下binlog的格式。
3.讲一下协程设计
同一面
4。一道算法题
跟数列有关的算法题，可能是想考察dp的，我直接推出了通项公式，代码也没写
5.go的hashmap如何实现的
讲了一下均摊扩容，然后问了一些很细节的问题，估计是看的某个issue。
6.实现一个hashmap
。。。。写了增删改查，扩容不会写。
Go开发岗
阿里巴巴面试

ㅤ普通",
【阿里巴巴】Go岗-秋招六轮,"阿里的二三面都是突然搞袭击，每次都是我刚睡醒 朦胧的状态面的试QAQ发挥都不太好
笔试 8月7号
第一题A了 第二题超时了才10% 可能是因为数组make了太多 触发了GC太多了吧
我刚睡醒就接到电话了 还是挺蒙的
基本上就是聊人生，聊你对公司的理解
聊学校的事情，聊聊技术。嗯 阿里的hr都是懂点技术的。。
Go开发岗
阿里巴巴面试

ㅤ普通",
【阿里巴巴】Go岗-后端社招面试经历,"介绍一下自己
问项目经历, 聊”数据同步”
接着聊上了 K8S 的项目
有没有什么钻研得比较深得技术？（我：kubernetes, golang, prometheus, java） kubernetes 的架构是怎么样的?
这个问题很大，拆成 apiserver、controller、kubelet、scheduler 讲了一下
golang 与 java 的比较
这个问题又很大，当时主要对比了 vm、协程支持、面向对象和泛型的区别、以及自己对各自使用场景的一些理解
golang 的 gc 算法
知道是三色标记，不过细节说不上来
从无限的字符流中, 随机选出 10 个字符
没见过也没想出来，查了一下是蓄水池采样算法，经典面试题，没刷题吃亏了
怎么扩展 kubernetes scheduler, 让它能 handle 大规模的节点调度
单节点提速：优选阶段随机取部分节点进行优选；水平扩展 scheduler 节点，pod 做一致性 hash 来决定由哪个 scheduler 调度
你有什么想问我的?
一面其实有点僵，我自己完全没放开，面试官对我的回答没有什么反馈和深入，都是”哦好的”然后就过了。所以我当时面完觉得自己其实已经挂了（我自己要是对***不感兴趣，有时候也就问完问题走个过场溜了），后来收到二面电话着实吃惊了一下。
先聊了聊项目
给 Prometheus 做了哪些改动？
自研配置中心, 具体做了哪些内容？ 有用过 MySQL 的什么高级特性吗?
这里不太理解，我问什么算高级特性，面试官就切换到了下一个问题
配置中心的核心数据表是怎么设计的?
为什么在业务里用 Redis, Redis 有什么优点?
单线程：并发安全；高性能；原语与数据结构丰富；采用广泛，踩坑成本低
对 Redis 里数据结构的实现熟悉吗?
说了一个 zset 跳表
用过 Redis 的哪些数据结构, 分别用在什么场景?
Java 初始化一个线程池有哪些参数可以配置, 分别是什么作用?
自己写的 Java 应用调优过哪些 JVM 参数, 为什么这么调优?
这个问住了，我只知道最大堆最小堆，开 G1，开 GC 日志以及 OOM dumper 这些基本的
用 Jetty 的时候有没有配什么参数, 为什么这么配?
Jetty QTP 等待队列配置成无限的话, 你觉得好吗? 会有什么问题吗?
用过 Linux Bash 里的哪些命令, 分别用它们干嘛?
一道笔试题: 需要在给的链接中作答, 不能 google, 不能跳出, 不能用 IDE:
题目是这样的：
启动两个线程, 一个输出 1,3,5,7…99, 另一个输出 2,4,6,8…100 最后 STDOUT 中按序输出 1,2,3,4,5…100
我: 我用 Go 实现吧
面试官: 不可以，用 Java 的 notify 机制实现
我: (还没意识到问题的严峻) 那我用 Java BlockingQueue
面试官：说不可以, 要求用 Java 的 wait + notify 机制来实现
我完全没写过 wait + notify，只能表示不会（菜鸡本鸡了）, 面试官说那行吧你可以用 go 写
最后用 go channel 实现了一版, 不过给的网页上不能运行代码，也不知道写得对不对，然后面试结束。
这一轮面试官延续了一面的风格，问完一题就赶忙下一题了，似乎没有表现出对我的回答有兴趣或认可。因此这轮面完，我又觉得自己挂了…
依然先聊项目 对监控警报的项目很感兴趣, 问了挺多细节, 最后问了一个问题: 现在要你实现一个语义不弱于 PromQL 的查询语言, 你能实现吗?
这里虽然看过一些 Prometheus 的代码，但其实对 PromQL 的 lexer 和 parser 部分没有细看，还好之前因为数据同步项目里想写声明式 Stream SQL 研究过一点 ANTLR，用 ANTLR 写语法 + AST 遍历塞查询逻辑给糊弄过去了。
问我觉得做得最深入的项目是什么
当然是数据同步（狗头）
聊数据同步项目（这个很符合我的预期，哈哈哈哈）
问 Linux 掌握得怎么样？
没有系统学习过，基本上是自己运维踩坑积累的
问 Golang 掌握得怎么样？
用了半年, 看过 effective go
问算法掌握得怎么样？
到图为止都可以
问最短路算法
只记得 dijkstra 了，描述了代码流程
k8s 掌握得怎么样?
不怎么样，没有自己写过 controller 和 scheduler，但是对概念都很熟悉，看过 xxx 这几部分的源码
k8s 的 exec 是怎么实现的?
这个问题正中下怀，之前写了 PingCAP 的小作业正好对这块特别熟悉
这轮聊得顺畅多了。同时发现蚂蚁的面试官似乎挺喜欢让你自己评价自己的：”你觉得自己 xxx 掌握得怎么样？”（只有五位面试官，样本不够大，不能作数哦），这类问题其实我慌得要死，怕自己吹过头了答不上来，面试挂了事小，丢了面子事大。早知道就预习一下怎么吹嘘自己了。
介绍一下自己
觉得自己基础知识掌握 怎么样
平时一般会用到哪些数据结构？
链表和数组相比, 有什么优劣？
如何判断两个无环单链表有没有交叉点
如何判断两个有环单链表有没有交叉点
如何判断一个单链表有没有环, 并找出入环点
TCP 和 UDP 有什么区别?
描述一下 TCP 四次挥手的过程中
TCP 有哪些状态
TCP 的 LISTEN 状态是什么
TCP 的 CLOSE_WAIT 状态是什么
建立一个 socket 连接要经过哪些步骤
常见的 HTTP 状态码有哪些
301和302有什么区别
504和500有什么区别
HTTPS 和 HTTP 有什么区别
写一个算法题: 手写快排
这一轮全程问的基础知识，基础扎实的话就没问题了，不过个人感觉有一点像校招的问法。
介绍一下自己
在 k8s 上做过哪些二次开发?
自己用 Helm 构建过 chart 吗？有哪些？
有没有考虑过自己封装一个面向研发的 PaaS 平台？
配置中心做了什么？
为什么不用 zookeeper？
配置中心如何保证一致性？ Spring 里用了单例 Bean, 怎么保证访问 Bean 字段时的并发安全？
用并发安全的数据结构，比如 ConcurrentHashMap；或者加互斥锁
假如我还想隔离两个线程的数据, 怎么办？
ThreadLocal，然后举了个例子
Golang 里的逃逸分析是什么？怎么避免内存逃逸？
这个不知道，认怂了
对比一下 Golang 和 Java 的 GC
答了一下 CMS、G1和三色标记，我对比的点是 JVM 有分代回收，Go 的 Runtime 没有，没能深入地讲
Golang 的 GC 触发时机是什么
阈值触发；主动触发；两分钟定时触发；
有没有写过 k8s 的 Operator 或 Controller？（我：没有写过）
谈一谈你对微服务架构的理解
大体思路”微服务本质是人员组织架构演进与关注点分离”
谈一谈你对 Serveless 的理解
大体思路”Serveless 是继 docker 与容器编排之后的又一次应用开发与基础设施提供方之间的边界划分”
你认为 Serveless 是未来吗? 为什么?
大体思路”是云服务的未来，把蛋糕从企业的IT、运维与中间件部门切走，形成规模效应，做得越多赚得越多；公司内的话 servless 能够帮助加速前台业务迭代，但对中后台的收益还看不到，未来可能会有比 servless 更适合中后台的架构”
面试官：最后你有什么要问我的？
我：为什么足足安排了五轮技术面，而且其中有两轮似乎和 k8s 没有关系啊？
面试官：我们觉得你做过的东西挺多的，各个方向都想让你尝试一下 (我的内心：……)
我：那这轮是最后一轮技术面吗？
面试官：不一定（我的内心：……)
五面最后的三个吹水问题我还挺感兴趣，可惜面试官只是听我讲，没有跟我讨论。还有就是问了面试官才知道，二面四面的面试官是 PaaS 平台那边的，因此主要问 Java 没有涉及到 k8s 和 go。
HR 面，之前就听说过阿里系的 HR 是来”闻味道的”（看你是否适合阿里的风格），而且有一票否决权。所以还是挺有压力的。
问经历 为什么要考虑出来看看呢？
金句：” 现在自己的技术成长有点碰到瓶颈，加上一直对您公司钦慕有加☺️ “”
现在公司的主营业务是什么？（这块往技术上问了很多，感觉是想考察我解释复杂问题的能力）
现在带人吗？report 层级是怎样的？
对自己这几年的经历满意吗？
觉得自己有什么缺点？
碰到过什么很挫败的事情吗？
未来的职业规划是怎样的？
看机会的时候，主要考虑的是待遇、平台、人员还是什么其他因素？
现在的待遇如何
有什么想问我的
整体聊了 40 多分钟，话题挺广的，面试官也说了系统部这边压力挺大的，优秀的人才才能留下来。个人觉得 HR 面里除了谈薪酬的部分没有什么可准备的，想说什么直说就行。因为到了 HR 面至少证明你的技术没什么问题，直说出来方便 HR 判断两边的价值观是否合拍，假如真的不合拍，那其实在 HR 这一面挂了比起进去之后再后悔又跳槽要好很多，毕竟大家都不喜欢频繁跳槽的简历。
Go开发岗
阿里巴巴面试

ㅤ普通",
【阿里巴巴】Go岗-非科班菜鸡的实习,"GMP模型是如何实现的
进程，线程，协程联系和区别
别的语言有协程嘛
一颗CPU，两个协程，其中一个协程在死循环，会发生什么
GC垃圾回收机制
和JAVA垃圾回收机制有啥区别
Channel底层原理
用Channel和两个协程实现数组相加
用协程实现顺序打印123
切片原理 和数组的区别
切片初始化问题
map什么内容不能成为key
map和sync map（读写问题）
看过啥底层包（net，sync等等）
懂不懂RPC。
项目怎么实现高并发高性能（我的项目内容就实现了个读写分离，协程池）
链表排序插入，二叉树找中间一段子树（题号437），层次遍历等等L网站初级或中级题目，
最难也就阿里笔试初级回溯算法了，（还有同学的腾讯笔试题目太难了，5道我就能写出一道题目），老老实实把简单题刷熟，真没想象中那么难。
排序算法，堆排序，桶排序，快排，二分查找等等手写，并且举例说出最优和最差情况
建议玩一天抓包，基本的内容也就熟悉了。
HTTP协议报文内容，常见状态码，挂了怎么办。
TCP三次握手，四次挥手，以及通信中间挂了怎么办。
TCP UDP报文格式以及区别，为啥要那些字段，分别能传输最大报文为多少。
OSI7层模型说说每层的常用协议。
ICMP,IGMP协议是怎么回事，怎么实现的。
为啥要IP还要mac。
常见路由协议。
ARP协议是怎么回事，报文内容有啥。
一个包怎么能从一台电脑到另一台电脑。
强烈建议多找找应用场景，怎么来构建数据库，不要像我只会增删查改。
ACID
隔离级别
备份还原
redis基本数据类型，RDB和AOF
基础查表建表问题。
linux下进程，线程实现，如何通信
常见命令ls,ps,df等等
grep写正则
僵尸进程，孤儿进程
Go开发岗
阿里巴巴面试

ㅤ普通",
【阿里巴巴】Go岗-春招实习阶段性总结（已OC）,"我首先就投了阿里云和字节后端，是正月初七开始投的，很多大哥年前就开始投了（太猛了）。都说字节效率高，但是我好久没收到面试通知（可能因为我菜）。阿里云的大佬们很快就约了我，我同时和云原生的三个团队进行联系，两个是容器的团队，一个是数据可视化的好像。（提前批可以广投当海王，然后最后选一个进系统）
流程最快的还是其中一个容器团队，最后我也收到这个团队的offer，所以我就说说这个团队的经历。
自我介绍
TCP/UDP区别，TCP拥塞控制流量控制
HTTPS原理过程
make原理
进程、线程、协程区别，各自结构，内存分配
分布式CAP模型
golang GMP模型
golang内存分配
golang GC(三色、写屏障、STW)
linux io多路复用(epoll、poll、select)
linux io流程(应用、文件系统、内核、硬件)
程序编译的流程、执行的流程、内部形态(深入理解计算机系统中有)
算法(合并升序链表、长数字划分多个可以被3整除的数)
（人生中第一次面试，答的自我感觉还算良好）
自我介绍
项目介绍
针对一个项目问（并发量、业务流程、我所做的工作、技术挑战点）
针对一个研究性质的项目问（怎么选择分类器、数据量、工作流程、数据结构）
JVM I\O时操作系统发生了什么
算法（链表是否有环、走楼梯）
（阿里的算法是真的不难，但是对项目是真的重视）
当时我在洗头，突然就来电话了，迅速三面
问我的每一篇论文分别是干啥的
每一篇论文做的东西分别啥
每一篇我的工作分别是啥
因为我的论文大多数是网络嵌入相关的，我就介绍了我主写的那篇我搭的神经网络的原则、大致结构、性能等相关的东西
还有研究性质项目上用的算法相关的问题
面试官直接通知我提前批通过，三月中旬等消息
3.5 进系统录信息，测评+笔试
3.8 下午时候突然又接到电话，三面面试官打来的，说要加一面
自我介绍
每个项目都简单介绍介绍
学习情况
实验室情况
论文情况
实习时间
然后最离谱的是让我用英文介绍TCP/IP协议栈，我直接以英文口语不好回绝了，有点离谱好吗
然后说挺不错的等下次面试通知，还有让我回去好好学英语
（然后就是漫长的HR面试等待，开始两周一催，后面一周一催）
奖项介绍
经历介绍
等等等
（感觉还是不错的，阿里云的HR面虽慢尤强）
百度度小满的面经先不说了吧，过程比起其他的顺利多了，等过几天想写的时候再加到后边，字节是和一个部门面试了一次，然后卡我简历，春招才告诉我挂了，然后得走春招流程参加笔试，然后参加了两次笔试了，还是没约面试（真的是我太菜了）。腾讯的更曲折，WXG三面挂、财经三面挂（该生基础扎实、算法能力强、逻辑能力强，但是建议读个研究生，建议不通过），还让我转C++，浪费我的感情，现在终于面了一个Golang的岗位了，PCG的，过几天看心情随缘分享吧，美团点评是用Golang去面Java后端岗，面试总之不是很舒服，毕竟转岗面试竞争大难度也大。总体总结一下，使用Golang面其他岗有点难，需要看的挺多，但是如果面Golang后端开发就很舒服了。
如果准备找工作，而且对Golang感兴趣，可以选择Golang，但是这个可以选择的岗位不是很多，终究和Java没法比，Java是只要努力了卷了就一定有收获，而Golang就是可以选择的岗位不多，需要专精需要广泛选择，综合能力跟上。我在春招期间真的收获挺大的，原来以为抗压能力还行，后来发现我的心态真的不如我想的好，就在等阿里HR面途中，腾讯搞人心态，而且也没有其他的面试通知时，真的一度超级难受，都开始重新拿起考研教材了，后来也是和朋友家人聊天缓解过来了，我一受挫就海投，什么京东、BiliBili、360、搜狗、小米等都投过，只是想拿个保底，毕竟Golang岗要想的确实比其他岗要多，不是卷就能成的。但是它们的流程似乎很慢，在收到offer后我就都拒了它们的邀请了，终于算躺平了吧。后边其他的面经随缘更新吧。
Go开发岗
阿里巴巴面试

ㅤ普通",
【阿里巴巴】Go岗-后端一二三面凉经::>_<::,"前面一直在问实习的和学校里的经历
三面搞得心态很崩 很晚了 面试官也一直好像不想问一样
Go开发岗
阿里巴巴面试

ㅤ普通",
【阿里巴巴】Go岗-阿里云实习面经,"40 min
自我介绍
项目
缓存穿透
分布式缓存：如果客户端想保存热点数据，如何设计？
热点数据如何从存储节点同步到客户端？是推送还是拉取？
更新数据库，如何保证缓存一致？
MySQL binlog
介绍一下go
go 的调度模型
介绍了一下部门
最近学习的东西
在线写一个LRU
如何加锁
50 min
在线写hashmap
介绍项目
http 请求和响应头
https 建立连接的过程
go GC
对阿里的看法
给了建议，代码细节需要多注意，平时要多做单元测试
60min
自我介绍
项目
服务注册中心
有没有做过被实际应用的软件项目
熟悉的技术
mysql为什么用B+树
如果硬盘的随机访问性能大幅提升，mysql 的存储结构能否优化
其他的存储结构？哈希表怎么存？
用哈希的方式，增删改查相比B+树有什么区别？
介绍项目组
三面结束后正好2周才联系hr面
自我介绍
读研吗
介绍一下校内成就？paper，奖学金，竞赛？
介绍技术栈
为什么选择golang
如何平衡学业和学习技术的时间
遇到技术难题怎么解决
倾向的城市？
还投了其他公司吗？流程到哪了？
期待在实习过程中获得什么
倾向哪种类型的公司？
生活中特别down的时候怎么调节
后续
hr面之后第二天就收到意向书了
许愿offer
Go开发岗
阿里巴巴面试

ㅤ普通",
【阿里巴巴】Go岗-暑期后端开发,"1、问项目
2、二分查找
3、etcd选举机制，etcd源码可以看一下
4、kafka为什么性能高，应用场景，实现功能
5、http状态码
6、http get，post区别，说一下什么是restful风格
7、TCP,UDP三次握手，四次挥手，time_wait作用
8、MAC，IP工作在哪一层，区别
9、mysql存储引擎，以及应用场景
10、mysql索引有哪些，b+树b树区别
11、mysql用什么进行错误分析与定位
12、linux常用命令，查看硬盘剩余空间；查看父进程；某个进程内存占满，如何查看；find，grep区别
13、你用过k8s和docker吗，说一下它们的使用场景
14、介绍一下你最有成就感的项目，介绍一下亮点，以及遇到的问题，以及是怎么解决的
以上顺序不一定是面试时候问我的，记不太清了
有些基础题一问就卡壳或者回答反，还是怪自己有些基础知识平时记得不太清楚?
总体下来1小时10分左右，因为最开始麦没调好，耽搁了五六分钟。
1、自我介绍
2、问项目，遇到哪些难点，怎么解决的。
3、聊了下研究生的研究课题。
4、我看你本科专业不是计算机的，为什么选择计算机？
5、熟悉网络、linux相关的东西吗？
6、你主要是用go语言，那你能介绍一下go的包管理工具吗？除了go mod还知道哪些？
7、问意向工作地点，可以什么时候实习，以及可以实习多久的时间？
反问：
1、技术栈有哪些？
后端python、go
前端vue
2、面试表现如何？
总共下来35分钟左右吧，时间不长。
Go开发岗
阿里巴巴面试

ㅤ普通",
