问题,回答,所属分类
剑指 offer 题解（必读，持续更新）,"牛客网剑指 offer 的 66 道题，基本属于必刷题，帅地打算把 66 道的题解大致过一遍，大家也可以跟着帅地，每日一道刷起来！每道题会提供简单的思路以及测试通过的代码。
由于时间问题，每篇题解无法图文并貌，只能提供大致的题解，并且部分题解自己原创，部分借鉴于其他博客大佬的题解，部分是帅地花钱买的版权。
另外就是，题解顺序我是按照LeetCode顺序哈，所以可能会和牛客网的题号有所差别，也有可能是版本原因
剑指offer",
剑指offer 04. 二维数组中的查找,"牛客网剑指 offer 的 66 道题，基本属于必刷题，帅地打算把 66 岛的题解大致过一遍，大家也可以跟着帅地，每日一道刷起来！每道题会提供简单的思路以及测试通过的代码。
在一个二维数组中（每个一维数组的长度相同），每一行都按照从左到右递增的顺序排序，每一列都按照从上到下递增的顺序排序。请完成一个函数，输入这样的一个二维数组和一个整数，判断数组中是否含有该整数。
[
[1,2,8,9],
 [2,4,9,12],
 [4,7,10,13],
 [6,8,11,15]
]
给定 target = 7，返回 true。
给定 target = 3，返回 false。
示例1
示例2
一种简单的方法就是整个数组都遍历，当然，数组从左到右，从上到下都是有序的，如果你遍历整个数组的话，那就浪费了数组的局部有序性了。
如果我们从 row = 0 和col = 0开始遍历的话，发现右边的数比 array[row] [col] 大，而下边也比 array[row] [col]大，这样的话，貌似局部有序性没有派上用场
遍历不一定就一定要从 row = 0 和 col = 0开始，有时候，换个角度，一切就豁然开朗了。
实际上我们从数组的左下角开始遍历的话
1、如果array[row] [col] > target，那么 target 必定在元素 array[row] [col] 所在列的上边，则往上移动。
2、如果 array[row] [col] < target，那么target必定在元素 array[row] [col]  所在行的右边，则往右移动。
3、否则找到目的数。
这样，就完美利用到局部有序性了。代码如下：
此种方法对时间复杂度是O(m + n)，（m和n表示数组的长度和宽度）
当然，这里还有另外一种方法，因为每一行都是有序的，就是对每一行进行二分查找，这种方法的话，时间复杂度是 O(nlogn)，这种方法就不提供代码了。
剑指offer",
剑指 Offer 03. 数组中重复的数字,"在一个长度为 n 的数组 nums 里的所有数字都在 0～n-1 的范围内。数组中某些数字是重复的，但不知道有几个数字重复了，也不知道每个数字重复了几次。请找出数组中任意一个重复的数字。
示例 1：
限制：2 <= n <= 100000
原文链接：https://leetcode-cn.com/problems/shu-zu-zhong-zhong-fu-de-shu-zi-lcof
利用数据结构特点，容易想到使用哈希表（Set）记录数组的各个数字，当查找到重复数字则直接返回。
算法流程：
复杂度分析：
时间复杂度 O(N) ： 遍历数组使用 O(N) ，HashSet 添加与查找元素皆为 O(1) 。
空间复杂度 O(N) ： HashSet 占用 O(N) 大小的额外空间。
代码（Java）
Python
C++
题目说明尚未被充分使用，即 在一个长度为 n 的数组 nums 里的所有数字都在 0 ~ n-1 的范围内。 此说明含义：数组元素的 索引 和 值 是 一对多 的关系。
因此，可遍历数组并通过交换操作，使元素的 索引 与 值 一一对应（即 nums[i] = inums[i]=i）。因而，就能通过索引映射对应的值，起到与字典等价的作用。

遍历中，第一次遇到数字 x 时，将其交换至索引 x 处；而当第二次遇到数字 x 时，一定有 nums[x] = x ，此时即可得到一组重复数字。
算法流程：
复杂度分析：
时间复杂度 O(N) ： 遍历数组使用 O(N)，每轮遍历的判断和交换操作使用 O(1) 。
空间复杂度 O(1) ： 使用常数复杂度的额外空间。
Java
Python
Python 中， a, b = c, d 操作的原理是先暂存元组 (c, d)，然后 “按左右顺序” 赋值给 a 和 b 。
因此，若写为 nums[i], nums[nums[i]] = nums[nums[i]], nums[i] ，则 nums[i] 会先被赋值，之后 nums[nums[i]] 指向的元素则会出错。
C++
本题解来源：https://leetcode-cn.com/problems/shu-zu-zhong-zhong-fu-de-shu-zi-lcof/solution/mian-shi-ti-03-shu-zu-zhong-zhong-fu-de-shu-zi-yua/
大家一定要多学下第二种解法，还是有挺多题用到了第二种解法的，第一种解法没啥价值，绝大部分人都懂
 
剑指offer
手撕算法题",
