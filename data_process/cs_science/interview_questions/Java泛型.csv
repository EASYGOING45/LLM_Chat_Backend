问题,回答,所属分类
Java 的泛型是如何工作的 ? 什么是类型擦除 ?,"泛型是通过类型擦除来实现的，编译器在编译时擦除了所有类型相关的信息，所以在运行时不存在任何类型相关的信息。例如：List\<String> 在运行时仅用一个 List 来表示。这样做的目的，是确保能和 Java 5 之前的版本开发二进制类库进行兼容。
类型擦除：泛型信息只存在于代码编译阶段，在进入 JVM 之前，与泛型相关的信息会被擦除掉，专业术语叫做类型擦除。在泛型类被类型擦除的时候，之前泛型类中的类型参数部分如果没有指定上限，如 < T > 则会被转译成普通的 Object 类型，如果指定了上限如 < T extends String > 则类型参数就被替换成类型上限。
补充
1、两个 String 其实只有第一个起作用，后面一个没什么卵用，只不过 JDK7 才开始支持 List\<String>list = new ArrayList<> 这种写法。
2、第一个 String 就是告诉编译器，List 中存储的是 String 对象，也就是起类型检查的作用，之后编译器会擦除泛型占位符，以保证兼容以前的代码。
Java泛型
Java面试题",
什么是泛型中的限定通配符和非限定通配符 ?,"限定通配符对类型进行了限制。有两种限定通配符，一种是< ? extends T > 它通过确保类型必须是 T 的子类来设定类型的上界，另一种是< ? super T >它通过确保类型必须是 T 的父类来设定类型的下界。泛型类型必须用限定内的类型来进行初始化，否则会导致编译错误。另一方面 < ? > 表示了非限定通配符，因为 < ? > 可以用任意类型来替代。
Java泛型
Java面试题",
List< ? extends T > 和 List < ? super T > 之间有什么区别 ?,"这两个 List 的声明都是限定通配符的例子，List< ? extends T > 可以接受任何继承自 T 的类型的 List，而List < ? super T > 可以接受任何 T 的父类构成的 List。例如 List< ? extends Number > 可以接受 List< Integer > 或 List< Float > 。

  Array 不支持泛型，要用 List 代替 Array，因为 List 可以提供编译器的类型安全保证，而 Array却不能。

Java泛型
Java面试题",
